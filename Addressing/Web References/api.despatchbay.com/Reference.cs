//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Addressing.api.despatchbay.com {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AddressingServiceBinding", Namespace="urn:despatchbay")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AddressKeyType))]
    public partial class AddressingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FindAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressKeysByPostcodeOperationCompleted;
        
        /// CodeRemarks
        public AddressingService() {
            this.Url = "http://api.despatchbay.com/soap/v14/addressing.php";
        }
        
        public AddressingService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event FindAddressCompletedEventHandler FindAddressCompleted;
        
        /// CodeRemarks
        public event GetAddressByKeyCompletedEventHandler GetAddressByKeyCompleted;
        
        /// CodeRemarks
        public event GetAddressKeysByPostcodeCompletedEventHandler GetAddressKeysByPostcodeCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#FindAddress", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressType FindAddress(string postcode, string property) {
            object[] results = this.Invoke("FindAddress", new object[] {
                        postcode,
                        property});
            return ((AddressType)(results[0]));
        }
        
        /// CodeRemarks
        public void FindAddressAsync(string postcode, string property) {
            this.FindAddressAsync(postcode, property, null);
        }
        
        /// CodeRemarks
        public void FindAddressAsync(string postcode, string property, object userState) {
            if ((this.FindAddressOperationCompleted == null)) {
                this.FindAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAddressOperationCompleted);
            }
            this.InvokeAsync("FindAddress", new object[] {
                        postcode,
                        property}, this.FindAddressOperationCompleted, userState);
        }
        
        private void OnFindAddressOperationCompleted(object arg) {
            if ((this.FindAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAddressCompleted(this, new FindAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetAddressByKey", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressType GetAddressByKey(string key) {
            object[] results = this.Invoke("GetAddressByKey", new object[] {
                        key});
            return ((AddressType)(results[0]));
        }
        
        /// CodeRemarks
        public void GetAddressByKeyAsync(string key) {
            this.GetAddressByKeyAsync(key, null);
        }
        
        /// CodeRemarks
        public void GetAddressByKeyAsync(string key, object userState) {
            if ((this.GetAddressByKeyOperationCompleted == null)) {
                this.GetAddressByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressByKeyOperationCompleted);
            }
            this.InvokeAsync("GetAddressByKey", new object[] {
                        key}, this.GetAddressByKeyOperationCompleted, userState);
        }
        
        private void OnGetAddressByKeyOperationCompleted(object arg) {
            if ((this.GetAddressByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressByKeyCompleted(this, new GetAddressByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetAddressKeysByPostcode", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressKeyType[] GetAddressKeysByPostcode(string postcode) {
            object[] results = this.Invoke("GetAddressKeysByPostcode", new object[] {
                        postcode});
            return ((AddressKeyType[])(results[0]));
        }
        
        /// CodeRemarks
        public void GetAddressKeysByPostcodeAsync(string postcode) {
            this.GetAddressKeysByPostcodeAsync(postcode, null);
        }
        
        /// CodeRemarks
        public void GetAddressKeysByPostcodeAsync(string postcode, object userState) {
            if ((this.GetAddressKeysByPostcodeOperationCompleted == null)) {
                this.GetAddressKeysByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressKeysByPostcodeOperationCompleted);
            }
            this.InvokeAsync("GetAddressKeysByPostcode", new object[] {
                        postcode}, this.GetAddressKeysByPostcodeOperationCompleted, userState);
        }
        
        private void OnGetAddressKeysByPostcodeOperationCompleted(object arg) {
            if ((this.GetAddressKeysByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressKeysByPostcodeCompleted(this, new GetAddressKeysByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:despatchbay")]
    public partial class AddressType {
        
        /// <remarks/>
        public string CompanyName;
        
        /// <remarks/>
        public string Street;
        
        /// <remarks/>
        public string Locality;
        
        /// <remarks/>
        public string TownCity;
        
        /// <remarks/>
        public string County;
        
        /// <remarks/>
        public string PostalCode;
        
        /// <remarks/>
        public string CountryCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:despatchbay")]
    public partial class AddressKeyType {
        
        /// <remarks/>
        public string Key;
        
        /// <remarks/>
        public string Address;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    public delegate void FindAddressCompletedEventHandler(object sender, FindAddressCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    public delegate void GetAddressByKeyCompletedEventHandler(object sender, GetAddressByKeyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    public delegate void GetAddressKeysByPostcodeCompletedEventHandler(object sender, GetAddressKeysByPostcodeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.4.0.1033")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressKeysByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressKeysByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressKeyType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressKeyType[])(this.results[0]));
            }
        }
    }
}
